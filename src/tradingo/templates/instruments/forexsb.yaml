"download.{{ universe_name }}":
  depends_on: []
  function: tradingo.sampling.instruments.download_instruments
  symbols_out:
     - "instruments/{{ universe_name }}"
  publish_args:
    write_pickle: true
  params:
    epics: {{ epics }}
  enabled: {{ TP_INCLUDE_INSTRUMENTS }}

{% for epic in epics %}
"sample.{{ epic }}":
  depends_on: []
  symbols_out:
   - "{{ raw_prices_lib }}/{{ epic }}.{{ interval }}MIN"
  function: "tradingo.backfill.forexsb.load_backfill"
  params:
    symbol: "{{ epic }}"
    start_date: "{{ data_interval_start }}"
    end_date: "{{ data_interval_end }}"
    interval: "{{ interval }}"
    data_dir: "{{ data_dir }}"
{% endfor %}

"sample.{{ universe_name }}":
  function: tradingo.backfill.forexsb.create_universe
  params:
    pricelib: "{{ raw_prices_lib }}"
    start_date: "{{ data_interval_start }}"
    end_date: "{{ data_interval_end }}"
    symbols:
    {% for epic in epics %}
      - "{{ epic }}.{{ interval }}MIN"
    {% endfor %}
  depends_on:
  {%for epic in epics %}
    - "sample.{{ epic }}"
  {% endfor %}
  load_args:
    no_date: true
  publish_args:
    astype: float
  symbols_out:
  {% for occurence in ["open", "high", "low", "close"] %}
  - prices/{{ universe_name }}.mid.{{ occurence }}.{{ interval }}MIN
  {% endfor %}
